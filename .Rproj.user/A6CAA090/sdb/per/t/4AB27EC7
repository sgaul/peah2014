{
    "contents" : "---\ntitle       : Pe'ah Garden stats\nsubtitle    : Results for 2014\nauthor      : Scott Gaul\njob         : Pe'ah stats person\nframework   : minimal      # \nhighlighter : highlight.js  # {highlight.js, prettify, highlight}\nhitheme     : tomorrow      # \nwidgets     : []            # {mathjax, quiz, bootstrap}\next_widgets : {rCharts: [\"libraries/nvd3\", \"libraries/morris\"]} \nmode        : selfcontained # {standalone, draft}\n---\n\n## 2014 overall results\n\n2013 had the lowest yields for any year to date. We grew 608 pounds of vegetables or about 68,000 calories - roughly one month of food for an adult. This is less than 1/2 last year's total, although still a lot of food.\n\n```{r setup, message = F, echo = F, cache = F}\nrequire(rCharts)\nknitr::opts_chunk$set(comment = NA, results = 'asis', tidy = F, message = T)\n```\n\n\n```{r chart1, echo = FALSE, message = FALSE, warning = FALSE}\nn1 <- nPlot(y = 'Calories', x = 'Year', \n            width = 500, height = 300,\n            data = ddply(peah, .(Year), summarise, \n                    Pounds = sum(Pounds),\n                    Calories = sum(Calories)),\n            type = 'lineChart')\nn1$xAxis(axisLabel='Year')\nn1$yAxis(tickFormat = \"#!function(d) {return d3.format(',.0f')(d)}!#\", axisLabel='Calories')\nn1$chart(forceY = c(0,170000), margin = list(left = 80))\nn1$print('chart1')\n```\n\nHere is the same result in pounds harvested. \n\n```{r chart2, echo = FALSE, message = FALSE, warning = FALSE}\nn1 <- nPlot(y = 'Pounds', x = 'Year', \n            width = 500, height = 300,\n            data = ddply(peah, .(Year), summarise, \n                    Pounds = sum(Pounds),\n                    Calories = sum(Calories)),\n            type = 'lineChart')\nn1$xAxis(axisLabel='Year')\nn1$yAxis(tickFormat = \"#!function(d) {return d3.format(',.0f')(d)}!#\", axisLabel='Pounds')\nn1$chart(forceY = c(0,1700), margin = list(left = 80))\nn1$print('chart2')\n```\n\n\n## 2013 individual results\n\nIndividual results for the year are listed in the table below. (Some gardeners harvested more than one crop for the pe'ah contribution, so each crop is shown in that case.)  \n\n```{r, results='asis', echo = FALSE, message = FALSE, warning = FALSE, fig.height = 8}\nlibrary(xtable)\ntable <- ddply(peah13, .(Name, Crop), summarise, \n               Pounds = round(sum(Pounds),0), \n               Calories = round(sum(Calories),0))\nprint(xtable(table, digits = 0), type = \"html\", include.rownames = F)\n```\n\nThe full data for all years can be found [here](https://docs.google.com/spreadsheet/ccc?key=0AlYsW526rxsmdDhIVzM0VDYzRkdLOXlvcldfQkJtcnc&usp=sharing). \n\nCongratulations Courtney, Michelle, Julie and David! These two groups had the most successful plots for the last year. Courtney and Michelle harvested over 13,000 calories or roughly one week of food for someone in the New Haven community. \n\n```{r echo = FALSE, message = FALSE, warning = FALSE, fig.height=5}\npeah13byplot <- ddply(peah13, .(Name), summarise, Pounds = sum(Pounds), Calories = sum(Calories))\npeah13byplot$Name <- reorder(peah13byplot$Name, peah13byplot$Calories)\nqplot(data = peah13byplot, y = Name, x = Calories) + \n  labs(y = NULL) + \n  theme_minimal()\n\npeah13byplot$Name <- reorder(peah13byplot$Name, peah13byplot$Pounds)\nqplot(data = peah13byplot, y = Name, x = Pounds) + \n  labs(y = NULL) + \n  theme_minimal()\n```\n\nA few crops did better than others for the year. \n\n```{r echo = FALSE, message = FALSE, warning = FALSE, fig.height=5}\npeah13bycrop <- ddply(peah13, .(Crop), summarise, Pounds = sum(Pounds), Calories = sum(Calories))\npeah13bycrop$Crop <- reorder(peah13bycrop$Crop, peah13bycrop$Calories)\nqplot(data = peah13bycrop, y = Crop, x = Calories) + \n  labs(y = NULL) + \n  theme_minimal()\n\npeah13bycrop$Crop <- reorder(peah13bycrop$Crop, peah13bycrop$Pounds)\nqplot(data = peah13bycrop, y = Crop, x = Pounds) + \n  labs(y = NULL) + \n  theme_minimal()\n```\n\n## Comparison with prior years\n\nLower yields were basically across-the-board - it was a historically bad year for pretty much everything we planted. \n\n```{r echo = FALSE, message = FALSE, warning = FALSE, fig.height=6}\nggplot(data = subset(yearly, Crop %in% unique(peah13$Crop)), aes(x = Year, y = Calories.per.plot)) + \n  geom_line() + \n  scale_y_continuous(labels = comma) + \n  geom_point(data = subset(yearly, Year == 2013 & Crop %in% unique(peah13$Crop)), aes(x = Year, y = Calories.per.plot), colour = \"red\") + \n  theme_bw() + \n  labs(title = \"Crop harvest trends by year\") +\n  facet_wrap(~ Crop)\n```\n\nThe charts below show the cumulative harvests (in pounds) by week for the past several years. These can help compare the current harvest at any point to prior years. Choose the crop you want and add / remove years if needed. \n\n<style>\niframe{\n  height:600px;\n  width:700px;\n  margin:auto auto;\n}\n</style>\n```{r chart3, echo = FALSE, message = FALSE, warning = FALSE}\ncrops <- unique(cumul$Crop)\ncumul <- cast(subset(peah, Year > 2008), \n              Crop + Week ~ Year, value = \"Pounds\", sum, add.missing = T)\ncumsum <- data.frame(Crop=NA, Week=NA, variable=NA, value=NA)\nfor (i in 1:length(crops)) \n  {x <- subset(cumul, Crop == crops[i])\n   x[3:7] <- cumsum(x[3:7])\n   x <- melt(as.data.frame(x), id.vars = c(\"Crop\", \"Week\"))\n   cumsum <- rbind(cumsum, x)\n}\ncumsum <- cast(subset(cumsum, Crop != 'NA'), \n               Week + variable ~ Crop, value = \"value\", sum)\n\np <- nPlot(tomatoes ~ Week, \n           group = \"variable\", width = 500,\n           data = cumsum, \n           type = 'lineChart')\np$chart(margin = list(right = 100), interpolate = \"basis-open\")\np$addControls(\"y\", value = \"tomatoes\", values = levels(cumul$Crop))\np\n```\n\n\n\n",
    "created" : 1413231965014.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "1624182446",
    "id" : "4AB27EC7",
    "lastKnownWriteTime" : 1413232086,
    "path" : "C:/Dropbox/Public/peah2014/index.Rmd",
    "project_path" : "index.Rmd",
    "properties" : {
    },
    "source_on_save" : false,
    "type" : "r_markdown"
}